services:
  ghostfolio-redis:
    image: redis
    container_name: Ghostfolio-REDIS
    hostname: ghostfolio-redis
    security_opt:
      - no-new-privileges:true
    command: ['redis-server', '--requirepass', $REDIS_PASSWORD]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"] 
    user: ${UID}:${GID}
    environment:
      - TZ=${TZ}
    volumes:
      - ghostfolio_redis:/data
    restart: on-failure:5

  ghostfolio-db:
    image: postgres:17
    container_name: Ghostfolio-DB
    hostname: ghostfolio-db
    cap_drop:
      - ALL    
    cap_add:
      - CHOWN
      - DAC_READ_SEARCH
      - FOWNER
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}']
      timeout: 5s #45s
      interval: 10s
      retries: 5 #10
    volumes:
      - ghostfolio_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: on-failure:5

  ghostfolio:
    image: ghostfolio/ghostfolio:latest
    container_name: Ghostfolio
    hostname: ghostfolio
    security_opt:
      - no-new-privileges:true
    environment:
      - NODE_ENV=production
      - ACCESS_TOKEN_SALT=${ACCESS_TOKEN_SALT} #32 characters
      - JWT_SECRET_KEY=${JWT_SECRET_KEY} #32 characters
      - REDIS_HOST=ghostfolio-redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@ghostfolio-db:5432/${POSTGRES_DB}?connect_timeout=300&sslmode=prefer
    ports:
      - ${PORT}:3333
    restart: on-failure:5
    depends_on:
      ghostfolio-db:
        condition: service_started
      ghostfolio-redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://${GHOSTFOLIO_URL)/api/v1/health']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ghostfolio_redis:
  ghostfolio_db:
